
// File auto-generated by Padrick unknown
module pulpissimo_padframe_all_pads_pads
  import pkg_pulpissimo_padframe::*;
  import pkg_internal_pulpissimo_padframe_all_pads::*;
(
  output pad_domain_all_pads_static_connection_signals_pad2soc_t static_connection_signals_pad2soc,
  input  pad_domain_all_pads_static_connection_signals_soc2pad_t static_connection_signals_soc2pad,
 // Dynamic Pad control signals, these signals are controlled by the multiplexer in the correpsongin pad_controller module
  input mux_to_pads_t mux_to_pads_i,
  output pads_to_mux_t pads_to_mux_o,
  // Landing Pads
  inout wire logic pad_pad_ref_clk_pad,
  inout wire logic pad_pad_clk_byp_en_pad,
  inout wire logic pad_pad_reset_n_pad,
  inout wire logic pad_pad_bootsel0_pad,
  inout wire logic pad_pad_bootsel1_pad,
  inout wire logic pad_pad_jtag_tck_pad,
  inout wire logic pad_pad_jtag_trstn_pad,
  inout wire logic pad_pad_jtag_tms_pad,
  inout wire logic pad_pad_jtag_tdi_pad,
  inout wire logic pad_pad_jtag_tdo_pad,
  inout wire logic pad_pad_hyper_csn0_pad,
  inout wire logic pad_pad_hyper_csn1_pad,
  inout wire logic pad_pad_hyper_reset_n_pad,
  inout wire logic pad_pad_hyper_ck_pad,
  inout wire logic pad_pad_hyper_ckn_pad,
  inout wire logic pad_pad_hyper_dq0_pad,
  inout wire logic pad_pad_hyper_dq1_pad,
  inout wire logic pad_pad_hyper_dq2_pad,
  inout wire logic pad_pad_hyper_dq3_pad,
  inout wire logic pad_pad_hyper_dq4_pad,
  inout wire logic pad_pad_hyper_dq5_pad,
  inout wire logic pad_pad_hyper_dq6_pad,
  inout wire logic pad_pad_hyper_dq7_pad,
  inout wire logic pad_pad_hyper_rwds_pad,
  inout wire logic pad_pad_io00_pad,
  inout wire logic pad_pad_io01_pad,
  inout wire logic pad_pad_io02_pad,
  inout wire logic pad_pad_io03_pad,
  inout wire logic pad_pad_io04_pad,
  inout wire logic pad_pad_io05_pad,
  inout wire logic pad_pad_io06_pad,
  inout wire logic pad_pad_io07_pad,
  inout wire logic pad_pad_io08_pad,
  inout wire logic pad_pad_io09_pad,
  inout wire logic pad_pad_io10_pad,
  inout wire logic pad_pad_io11_pad,
  inout wire logic pad_pad_io12_pad,
  inout wire logic pad_pad_io13_pad,
  inout wire logic pad_pad_io14_pad,
  inout wire logic pad_pad_io15_pad,
  inout wire logic pad_pad_io16_pad,
  inout wire logic pad_pad_io17_pad,
  inout wire logic pad_pad_io18_pad,
  inout wire logic pad_pad_io19_pad,
  inout wire logic pad_pad_io20_pad,
  inout wire logic pad_pad_io21_pad,
  inout wire logic pad_pad_io22_pad,
  inout wire logic pad_pad_io23_pad,
  inout wire logic pad_pad_io24_pad,
  inout wire logic pad_pad_io25_pad,
  inout wire logic pad_pad_io26_pad,
  inout wire logic pad_pad_io27_pad,
  inout wire logic pad_pad_io28_pad,
  inout wire logic pad_pad_io29_pad,
  inout wire logic pad_pad_io30_pad,
  inout wire logic pad_pad_io31_pad
  );

   // Pad instantiations
   assign static_connection_signals_pad2soc.ref_clk = pad_pad_ref_clk_pad;
   assign static_connection_signals_pad2soc.clk_byp_en = pad_pad_clk_byp_en_pad;
   assign static_connection_signals_pad2soc.rst_n = pad_pad_reset_n_pad;
   (* PULLUP = "YES" *)
  IOBUF i_pad_bootsel0 (
    .T ( ~1'b0   ),
    .I ( 1'b0 ),
    .O ( static_connection_signals_pad2soc.bootsel0 ),
    .IO( pad_pad_bootsel0_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_bootsel1 (
    .T ( ~1'b0   ),
    .I ( 1'b0 ),
    .O ( static_connection_signals_pad2soc.bootsel1 ),
    .IO( pad_pad_bootsel1_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_jtag_tck (
    .T ( ~1'b0   ),
    .I ( 1'b0 ),
    .O ( static_connection_signals_pad2soc.jtag_tck ),
    .IO( pad_pad_jtag_tck_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_jtag_trstn (
    .T ( ~1'b0   ),
    .I ( 1'b0 ),
    .O ( static_connection_signals_pad2soc.jtag_trstn ),
    .IO( pad_pad_jtag_trstn_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_jtag_tms (
    .T ( ~1'b0   ),
    .I ( 1'b0 ),
    .O ( static_connection_signals_pad2soc.jtag_tms ),
    .IO( pad_pad_jtag_tms_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_jtag_tdi (
    .T ( ~1'b0   ),
    .I ( 1'b0 ),
    .O ( static_connection_signals_pad2soc.jtag_tdi ),
    .IO( pad_pad_jtag_tdi_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_jtag_tdo (
    .T ( ~1'b1   ),
    .I ( static_connection_signals_soc2pad.jtag_tdo ),
    .O (  ),
    .IO( pad_pad_jtag_tdo_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_csn0 (
    .T ( ~1'b1   ),
    .I ( static_connection_signals_soc2pad.hyper_cs0_no ),
    .O (  ),
    .IO( pad_pad_hyper_csn0_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_csn1 (
    .T ( ~1'b1   ),
    .I ( static_connection_signals_soc2pad.hyper_cs1_no ),
    .O (  ),
    .IO( pad_pad_hyper_csn1_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_reset_n (
    .T ( ~1'b1   ),
    .I ( static_connection_signals_soc2pad.hyper_reset_no ),
    .O (  ),
    .IO( pad_pad_hyper_reset_n_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_ck (
    .T ( ~1'b1   ),
    .I ( static_connection_signals_soc2pad.hyper_ck ),
    .O (  ),
    .IO( pad_pad_hyper_ck_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_ckn (
    .T ( ~1'b1   ),
    .I ( static_connection_signals_soc2pad.hyper_ckn ),
    .O (  ),
    .IO( pad_pad_hyper_ckn_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_dq0 (
    .T ( ~static_connection_signals_soc2pad.hyper_dq_oe   ),
    .I ( static_connection_signals_soc2pad.hyper_dq0_o ),
    .O ( static_connection_signals_pad2soc.hyper_dq0_i ),
    .IO( pad_pad_hyper_dq0_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_dq1 (
    .T ( ~static_connection_signals_soc2pad.hyper_dq_oe   ),
    .I ( static_connection_signals_soc2pad.hyper_dq1_o ),
    .O ( static_connection_signals_pad2soc.hyper_dq1_i ),
    .IO( pad_pad_hyper_dq1_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_dq2 (
    .T ( ~static_connection_signals_soc2pad.hyper_dq_oe   ),
    .I ( static_connection_signals_soc2pad.hyper_dq2_o ),
    .O ( static_connection_signals_pad2soc.hyper_dq2_i ),
    .IO( pad_pad_hyper_dq2_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_dq3 (
    .T ( ~static_connection_signals_soc2pad.hyper_dq_oe   ),
    .I ( static_connection_signals_soc2pad.hyper_dq3_o ),
    .O ( static_connection_signals_pad2soc.hyper_dq3_i ),
    .IO( pad_pad_hyper_dq3_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_dq4 (
    .T ( ~static_connection_signals_soc2pad.hyper_dq_oe   ),
    .I ( static_connection_signals_soc2pad.hyper_dq4_o ),
    .O ( static_connection_signals_pad2soc.hyper_dq4_i ),
    .IO( pad_pad_hyper_dq4_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_dq5 (
    .T ( ~static_connection_signals_soc2pad.hyper_dq_oe   ),
    .I ( static_connection_signals_soc2pad.hyper_dq5_o ),
    .O ( static_connection_signals_pad2soc.hyper_dq5_i ),
    .IO( pad_pad_hyper_dq5_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_dq6 (
    .T ( ~static_connection_signals_soc2pad.hyper_dq_oe   ),
    .I ( static_connection_signals_soc2pad.hyper_dq6_o ),
    .O ( static_connection_signals_pad2soc.hyper_dq6_i ),
    .IO( pad_pad_hyper_dq6_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_dq7 (
    .T ( ~static_connection_signals_soc2pad.hyper_dq_oe   ),
    .I ( static_connection_signals_soc2pad.hyper_dq7_o ),
    .O ( static_connection_signals_pad2soc.hyper_dq7_i ),
    .IO( pad_pad_hyper_dq7_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_hyper_rwds (
    .T ( ~static_connection_signals_soc2pad.hyper_rwds_oe   ),
    .I ( static_connection_signals_soc2pad.hyper_rwds_o ),
    .O ( static_connection_signals_pad2soc.hyper_rwds_i ),
    .IO( pad_pad_hyper_rwds_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io00 (
    .T ( ~mux_to_pads_i.pad_io00.tx_en   ),
    .I ( mux_to_pads_i.pad_io00.chip2pad ),
    .O ( pads_to_mux_o.pad_io00.pad2chip ),
    .IO( pad_pad_io00_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io01 (
    .T ( ~mux_to_pads_i.pad_io01.tx_en   ),
    .I ( mux_to_pads_i.pad_io01.chip2pad ),
    .O ( pads_to_mux_o.pad_io01.pad2chip ),
    .IO( pad_pad_io01_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io02 (
    .T ( ~mux_to_pads_i.pad_io02.tx_en   ),
    .I ( mux_to_pads_i.pad_io02.chip2pad ),
    .O ( pads_to_mux_o.pad_io02.pad2chip ),
    .IO( pad_pad_io02_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io03 (
    .T ( ~mux_to_pads_i.pad_io03.tx_en   ),
    .I ( mux_to_pads_i.pad_io03.chip2pad ),
    .O ( pads_to_mux_o.pad_io03.pad2chip ),
    .IO( pad_pad_io03_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io04 (
    .T ( ~mux_to_pads_i.pad_io04.tx_en   ),
    .I ( mux_to_pads_i.pad_io04.chip2pad ),
    .O ( pads_to_mux_o.pad_io04.pad2chip ),
    .IO( pad_pad_io04_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io05 (
    .T ( ~mux_to_pads_i.pad_io05.tx_en   ),
    .I ( mux_to_pads_i.pad_io05.chip2pad ),
    .O ( pads_to_mux_o.pad_io05.pad2chip ),
    .IO( pad_pad_io05_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io06 (
    .T ( ~mux_to_pads_i.pad_io06.tx_en   ),
    .I ( mux_to_pads_i.pad_io06.chip2pad ),
    .O ( pads_to_mux_o.pad_io06.pad2chip ),
    .IO( pad_pad_io06_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io07 (
    .T ( ~mux_to_pads_i.pad_io07.tx_en   ),
    .I ( mux_to_pads_i.pad_io07.chip2pad ),
    .O ( pads_to_mux_o.pad_io07.pad2chip ),
    .IO( pad_pad_io07_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io08 (
    .T ( ~mux_to_pads_i.pad_io08.tx_en   ),
    .I ( mux_to_pads_i.pad_io08.chip2pad ),
    .O ( pads_to_mux_o.pad_io08.pad2chip ),
    .IO( pad_pad_io08_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io09 (
    .T ( ~mux_to_pads_i.pad_io09.tx_en   ),
    .I ( mux_to_pads_i.pad_io09.chip2pad ),
    .O ( pads_to_mux_o.pad_io09.pad2chip ),
    .IO( pad_pad_io09_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io10 (
    .T ( ~mux_to_pads_i.pad_io10.tx_en   ),
    .I ( mux_to_pads_i.pad_io10.chip2pad ),
    .O ( pads_to_mux_o.pad_io10.pad2chip ),
    .IO( pad_pad_io10_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io11 (
    .T ( ~mux_to_pads_i.pad_io11.tx_en   ),
    .I ( mux_to_pads_i.pad_io11.chip2pad ),
    .O ( pads_to_mux_o.pad_io11.pad2chip ),
    .IO( pad_pad_io11_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io12 (
    .T ( ~mux_to_pads_i.pad_io12.tx_en   ),
    .I ( mux_to_pads_i.pad_io12.chip2pad ),
    .O ( pads_to_mux_o.pad_io12.pad2chip ),
    .IO( pad_pad_io12_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io13 (
    .T ( ~mux_to_pads_i.pad_io13.tx_en   ),
    .I ( mux_to_pads_i.pad_io13.chip2pad ),
    .O ( pads_to_mux_o.pad_io13.pad2chip ),
    .IO( pad_pad_io13_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io14 (
    .T ( ~mux_to_pads_i.pad_io14.tx_en   ),
    .I ( mux_to_pads_i.pad_io14.chip2pad ),
    .O ( pads_to_mux_o.pad_io14.pad2chip ),
    .IO( pad_pad_io14_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io15 (
    .T ( ~mux_to_pads_i.pad_io15.tx_en   ),
    .I ( mux_to_pads_i.pad_io15.chip2pad ),
    .O ( pads_to_mux_o.pad_io15.pad2chip ),
    .IO( pad_pad_io15_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io16 (
    .T ( ~mux_to_pads_i.pad_io16.tx_en   ),
    .I ( mux_to_pads_i.pad_io16.chip2pad ),
    .O ( pads_to_mux_o.pad_io16.pad2chip ),
    .IO( pad_pad_io16_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io17 (
    .T ( ~mux_to_pads_i.pad_io17.tx_en   ),
    .I ( mux_to_pads_i.pad_io17.chip2pad ),
    .O ( pads_to_mux_o.pad_io17.pad2chip ),
    .IO( pad_pad_io17_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io18 (
    .T ( ~mux_to_pads_i.pad_io18.tx_en   ),
    .I ( mux_to_pads_i.pad_io18.chip2pad ),
    .O ( pads_to_mux_o.pad_io18.pad2chip ),
    .IO( pad_pad_io18_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io19 (
    .T ( ~mux_to_pads_i.pad_io19.tx_en   ),
    .I ( mux_to_pads_i.pad_io19.chip2pad ),
    .O ( pads_to_mux_o.pad_io19.pad2chip ),
    .IO( pad_pad_io19_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io20 (
    .T ( ~mux_to_pads_i.pad_io20.tx_en   ),
    .I ( mux_to_pads_i.pad_io20.chip2pad ),
    .O ( pads_to_mux_o.pad_io20.pad2chip ),
    .IO( pad_pad_io20_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io21 (
    .T ( ~mux_to_pads_i.pad_io21.tx_en   ),
    .I ( mux_to_pads_i.pad_io21.chip2pad ),
    .O ( pads_to_mux_o.pad_io21.pad2chip ),
    .IO( pad_pad_io21_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io22 (
    .T ( ~mux_to_pads_i.pad_io22.tx_en   ),
    .I ( mux_to_pads_i.pad_io22.chip2pad ),
    .O ( pads_to_mux_o.pad_io22.pad2chip ),
    .IO( pad_pad_io22_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io23 (
    .T ( ~mux_to_pads_i.pad_io23.tx_en   ),
    .I ( mux_to_pads_i.pad_io23.chip2pad ),
    .O ( pads_to_mux_o.pad_io23.pad2chip ),
    .IO( pad_pad_io23_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io24 (
    .T ( ~mux_to_pads_i.pad_io24.tx_en   ),
    .I ( mux_to_pads_i.pad_io24.chip2pad ),
    .O ( pads_to_mux_o.pad_io24.pad2chip ),
    .IO( pad_pad_io24_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io25 (
    .T ( ~mux_to_pads_i.pad_io25.tx_en   ),
    .I ( mux_to_pads_i.pad_io25.chip2pad ),
    .O ( pads_to_mux_o.pad_io25.pad2chip ),
    .IO( pad_pad_io25_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io26 (
    .T ( ~mux_to_pads_i.pad_io26.tx_en   ),
    .I ( mux_to_pads_i.pad_io26.chip2pad ),
    .O ( pads_to_mux_o.pad_io26.pad2chip ),
    .IO( pad_pad_io26_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io27 (
    .T ( ~mux_to_pads_i.pad_io27.tx_en   ),
    .I ( mux_to_pads_i.pad_io27.chip2pad ),
    .O ( pads_to_mux_o.pad_io27.pad2chip ),
    .IO( pad_pad_io27_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io28 (
    .T ( ~mux_to_pads_i.pad_io28.tx_en   ),
    .I ( mux_to_pads_i.pad_io28.chip2pad ),
    .O ( pads_to_mux_o.pad_io28.pad2chip ),
    .IO( pad_pad_io28_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io29 (
    .T ( ~mux_to_pads_i.pad_io29.tx_en   ),
    .I ( mux_to_pads_i.pad_io29.chip2pad ),
    .O ( pads_to_mux_o.pad_io29.pad2chip ),
    .IO( pad_pad_io29_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io30 (
    .T ( ~mux_to_pads_i.pad_io30.tx_en   ),
    .I ( mux_to_pads_i.pad_io30.chip2pad ),
    .O ( pads_to_mux_o.pad_io30.pad2chip ),
    .IO( pad_pad_io30_pad      )
  );
   (* PULLUP = "YES" *)
  IOBUF i_pad_io31 (
    .T ( ~mux_to_pads_i.pad_io31.tx_en   ),
    .I ( mux_to_pads_i.pad_io31.chip2pad ),
    .O ( pads_to_mux_o.pad_io31.pad2chip ),
    .IO( pad_pad_io31_pad      )
  );

endmodule : pulpissimo_padframe_all_pads_pads
